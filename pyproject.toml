[project]
name = "aiosend"
description = "sync & async Crypto Pay API client."
authors = [{ name = "VoVcHiC", email = "tsvetkovvova17@gmail.com" }]
license = "MIT"
requires-python = ">=3.10"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "crypto pay",
    "CryptoBot",
    "Crypto Bot",
    "Crypto Pay API",
    "cryptopayapi",
    "cryptobot",
    "CryptoPayAPI",
    "crypto pay api",
]
readme = "README.md"
dependencies = [
    "aiohttp>=3.9.0",
    "certifi>=2023.7.22",
    "magic-filter>=1.0.12",
    "pydantic>=2.4.1,<2.12",
]
dynamic = ["version"]

[tool.hatch.version]
path = "aiosend/__meta__.py"

[project.optional-dependencies]
docs = [
    "furo",
    "sphinx-intl",
    "sphinx-autodoc-typehints",
    "sphinx_copybutton",
    "sphinxext-opengraph",
    "matplotlib",
]
fastapi = ["fastapi[standard]"]
flask = ["flask"]

[project.urls]
Repository = "https://github.com/vovchic17/aiosend"
Documentation = "https://aiosend.rtfd.io/"

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
ignore = [
    "D100", # undocumented-public-module
    "D104", # undocumented-public-package
    "D105", # undocumented-magic-method
    "D106", # undocumented-public-nested-class
    "D107", # undocumented-public-init
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D403", # first-word-uncapitalized
]
select = ["ALL"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"*/_methods/*" = ["PLR0913", "E501"] # too-many-arguments line-too-long
"*/types/*" = ["E501"]               # line-too-long
"*/tools/*" = ["E501"]               # line-too-long
"*/client/*" = ["PLR0913"]           # too-many-arguments
"tests/*" = ["ALL"]
"examples/*" = ["ALL"]
"docs/*" = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-line-length = "dynamic"

[[tool.mypy.overrides]]
module = ["*._methods.*", "*.webhook.*", "*.tools.*", "*.polling.*"]
disable_error_code = ["misc"]

[[tool.mypy.overrides]]
module = ["*.fastapi_manager.*", "*.flask_manager.*"]
disable_error_code = ["misc", "import-not-found"]

[tool.mypy]
exclude = ["tests", "docs", "examples"]
python_version = "3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
