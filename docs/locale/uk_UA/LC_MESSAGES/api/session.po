# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, VoVcHiC
# This file is distributed under the same license as the aiosend package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiosend \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-12 14:38+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../api/session.rst:3
msgid "Session"
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession:1 of
msgid "Bases: :py:class:`~aiosend.client.session.base.BaseSession`"
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession:1 of
msgid "Http session based on aiohttp."
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession:3 of
msgid "This class is a wrapper of `aiohttp.ClientSession`."
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession.request:1
#: aiosend.client.session.base.BaseSession.request:1 of
msgid "Make http request."
msgstr ""

#: ../../api/session.rst
msgid "Return type"
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession.request:4
#: aiosend.client.session.base.BaseSession.request:4 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`\\_CryptoPayType\\`\\`\\, bound\\= CryptoPayObject \\| list"
" \\| bool\\)`"
msgstr ""

#: aiosend.client.session.base.BaseSession:1 of
msgid "Bases: :py:class:`~abc.ABC`"
msgstr ""

#: aiosend.client.session.base.BaseSession:1 of
msgid "Abstract session class."
msgstr ""

#: aiosend.client.session.base.BaseSession:3 of
msgid ""
"If you want to implement your own session class, you should inherit this "
"class."
msgstr ""

#: ../../api/session.rst:9
msgid ""
"**aiosend** uses `aiohttp "
"<https://docs.aiohttp.org/en/stable/index.html>`_ session by default. You"
" can implement your own session by inheriting :class:`BaseSession "
"<aiosend.client.session.BaseSession>` and overriding :attr:`request "
"<aiosend.client.session.BaseSession.request>` and :attr:`close "
"<aiosend.client.session.BaseSession.close>` methods."
msgstr ""

