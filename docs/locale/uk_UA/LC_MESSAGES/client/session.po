# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, VoVcHiC
# This file is distributed under the same license as the aiosend package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: aiosend \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-04 21:36+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../client/session.rst:3
msgid "Session"
msgstr "Сесія"

#: ../../client/session.rst:5
msgid ""
"**aiosend** uses `aiohttp "
"<https://docs.aiohttp.org/en/stable/index.html>`_ session by default. You"
" can implement your own session by inheriting :class:`BaseSession "
"<aiosend.client.session.BaseSession>` and overriding :meth:`request "
"<aiosend.client.session.BaseSession.request>` method."
msgstr ""
"**aiosend** за умовчанням використовує сесію "
"`aiohttp <https://docs.aiohttp.org/en/stable/index.html>`_. Ви можете "
"створити свою сесію, ґрунтуючись на :class:`BaseSession "
"<aiosend.client.session.BaseSession>`, перевизначивши метод "
":meth:`request <aiosend.client.session.BaseSession.request>`."

#: aiosend.client.session.aiohttp.AiohttpSession:1 of
msgid "Bases: :py:class:`~aiosend.client.session.base.BaseSession`"
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession:1 of
msgid "Http session based on aiohttp."
msgstr "HTTP-сесія, заснована на aiohttp."

#: aiosend.client.session.aiohttp.AiohttpSession:3 of
msgid "This class is a wrapper of `aiohttp.ClientSession`."
msgstr "Цей клас є обгорткою над aiohttp.ClientSession."

#: aiosend.client.session.aiohttp.AiohttpSession.request:1
#: aiosend.client.session.base.BaseSession.request:1 of
msgid "Make http request."
msgstr "Виконати запит HTTP."

#: ../../client/session.rst
msgid "Return type"
msgstr ""

#: aiosend.client.session.aiohttp.AiohttpSession.request:4
#: aiosend.client.session.base.BaseSession.request:4 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`\\_CryptoPayType\\`\\`\\, bound\\= CryptoPayObject \\| list"
" \\| bool\\)`"
msgstr ""

#: aiosend.client.session.base.BaseSession:1 of
msgid "Bases: :py:class:`~abc.ABC`"
msgstr ""

#: aiosend.client.session.base.BaseSession:1 of
msgid "Abstract session class."
msgstr "Абстрактний клас сесії."

#: aiosend.client.session.base.BaseSession:3 of
msgid ""
"If you want to implement your own session class, you should inherit this "
"class."
msgstr ""
"Якщо ви хочете створити свій клас сесії, використовуйте цей клас "
"як базовий."

