# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, VoVcHiC
# This file is distributed under the same license as the aiosend package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiosend \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-09 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ru\n"
"Language-Team: ru <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../client/check_polling.rst:3
msgid "Check polling"
msgstr ""

#: ../../client/check_polling.rst:5
msgid ""
"Polling is a method of receiving updates by periodically sending "
"requests. Once :attr:`check status <aiosend.types.Check.status>` is "
"changed to :attr:`ACTIVATED <aiosend.enums.InvoiceStatus.ACTIVATED>`, "
":attr:`polling manager <aiosend.polling.PollingManager>` will call the "
":attr:`check_polling <aiosend.CryptoPay.check_polling>` handler. Check "
"polling uses the :attr:`/getChecks <aiosend.CryptoPay.get_invoices>` "
"method."
msgstr ""
"Поллинг - это метод получения уведомлений путём периодической отправки "
"запросов. После того, как :attr:`статус чека <aiosend.types.Check.status>` "
"будет изменён на :attr:`ACTIVATED <aiosend.enums.InvoiceStatus.ACTIVATED>`, "
":attr:`поллинг менеджер <aiosend.polling.PollingManager>` вызовет обработчик "
":attr:`check_polling <aiosend.CryptoPay.check_polling>`. "
"Поллинг чеков использует метод :attr:`/getChecks <aiosend.CryptoPay.get_invoices>`."

#: ../../client/check_polling.rst:13
msgid ""
":attr:`Polling manager <aiosend.polling.PollingManager>` has "
":attr:`configuration <aiosend.polling.PollingConfig>` that defines the "
":attr:`delay <aiosend.polling.PollingConfig.delay>` (between requests) "
"and :attr:`timeout <aiosend.polling.PollingConfig.timeout>` for each "
"check in the awaiting queue. After the timeout polling manager will stop "
"polling that check and call the :attr:`expired_check_polling "
"<aiosend.CryptoPay.expired_check_polling>` handler if it is declared."
msgstr ""
":attr:`Поллинг менеджер <aiosend.polling.PollingManager>` имеет "
":attr:`конфигурацию <aiosend.polling.PollingConfig>`, в которой "
"в которой задаются :attr:`задержка <aiosend.polling.PollingConfig.delay` "
"между запросами и :attr:`таймаут <aiosend.polling.PollingConfig.timeout>` "
"для каждого чека в очереди. После истечения таймаута менеджер прекратит поллинг "
"этого чека и вызовет обработчик :attr:`expired_check_polling "
"<aiosend.CryptoPay.expired_check_polling>`, если тот указан."

#: ../../client/check_polling.rst:22
msgid "**Default is 2 seconds delay and 300 seconds (5 min) timeout**."
msgstr "**По умолчанию задержка между запросами - 2 секунды, а таймаут - 300 секунд (5 минут)**."

#: ../../client/check_polling.rst:24
msgid ":ref:`You can change the polling configuration. <PollingConfigAnchor>`"
msgstr ":ref:`Вы можете изменять конфигурацию поллинга <PollingConfigAnchor>`"

#: aiosend.polling.check.CheckPollingManager.check_polling:1 of
msgid "Register a handler for polling check updates."
msgstr "Добавление обработчика для уведомлений поллинга чеков."

#: aiosend.polling.check.CheckPollingManager.check_polling:3
#: aiosend.polling.check.CheckPollingManager.expired_check_polling:3 of
msgid "Decorator for handler function."
msgstr "Декоратор дял функции-обработчика."

#: ../../client/check_polling.rst
msgid "Тип результата"
msgstr ""

#: aiosend.polling.check.CheckPollingManager.check_polling:5
#: aiosend.polling.check.CheckPollingManager.expired_check_polling:5 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\, "
"\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]`"
msgstr ""

#: ../../client/check_polling.rst
msgid "Результат"
msgstr ""

#: aiosend.polling.check.CheckPollingManager.check_polling:6
#: aiosend.polling.check.CheckPollingManager.expired_check_polling:6 of
msgid "handler function."
msgstr "функция-обрработчик."

#: aiosend.polling.check.CheckPollingManager.expired_check_polling:1 of
msgid "Register a handler for timed out checks."
msgstr "Добавление обработчика для истёкших чеков."

#: ../../client/check_polling.rst:30
msgid "Usage example"
msgstr "Пример использования"

#~ msgid "Return type"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

