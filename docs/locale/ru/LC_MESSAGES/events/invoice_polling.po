# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, VoVcHiC
# This file is distributed under the same license as the aiosend package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: aiosend \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-04 20:47+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ru\n"
"Language-Team: ru <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../events/invoice_polling.rst:3
msgid "Invoice polling"
msgstr "Поллинг счетов"

#: ../../events/invoice_polling.rst:5
msgid ""
"Polling is a method of receiving updates by periodically sending "
"requests. Once :attr:`invoice status <aiosend.types.Invoice.status>` is "
"changed to :attr:`PAID <aiosend.enums.InvoiceStatus.PAID>`, "
":class:`polling manager <aiosend.polling.PollingManager>` will call the "
":meth:`invoice_polling <aiosend.CryptoPay.invoice_polling>` handler. "
"Invoice polling uses the :meth:`/getInvoices "
"<aiosend.CryptoPay.get_invoices>` method."
msgstr ""
"Поллинг - это метод получения обновлений путём периодической отправки "
"запросов. После того, как :attr:`статус счёта "
"<aiosend.types.Invoice.status>` будет изменён на :attr:`PAID "
"<aiosend.enums.InvoiceStatus.PAID>`, :class:`поллинг-менеджер "
"<aiosend.polling.PollingManager>` вызовет обработчик "
":meth:`invoice_polling <aiosend.CryptoPay.invoice_polling>`. Поллинг "
"счетов использует метод :meth:`/getInvoices "
"<aiosend.CryptoPay.get_invoices>`."

#: ../../events/invoice_polling.rst:13
msgid ""
":class:`Polling manager <aiosend.polling.PollingManager>` has "
":class:`configuration <aiosend.polling.PollingConfig>` that defines the "
":attr:`delay <aiosend.polling.PollingConfig.delay>` (between requests) "
"and :attr:`timeout <aiosend.polling.PollingConfig.timeout>` for each "
"invoice in the awaiting queue. After the timeout polling manager will "
"stop polling that invoice and call the :meth:`expired_invoice_polling "
"<aiosend.CryptoPay.expired_invoice_polling>` handler if it is declared."
msgstr ""
"Менеджер опроса :class:`Polling manager <aiosend.polling.PollingManager>` "
"имеет настройки :class:`configuration <aiosend.polling.PollingConfig>`, в "
"которых задаются :attr:`задержка <aiosend.polling.PollingConfig.delay>` "
"(между запросами) и :attr:`таймаут <aiosend.polling.PollingConfig.timeout>`"
" для каждого счета в очереди. После истечения таймаута менеджер "
"прекращает опрос данного счета и, если указан, вызывает обработчик "
":meth:`expired_invoice_polling "
"<aiosend.CryptoPay.expired_invoice_polling>`."

#: ../../events/invoice_polling.rst:22
msgid "**Default is 2 seconds delay and 300 seconds (5 min) timeout**."
msgstr ""
"**По умолчанию задержка между запросами — 2 секунды, а таймаут — 300 "
"секунд (5 минут)**."

#: ../../events/invoice_polling.rst:24
msgid ":doc:`You can change the polling configuration. <polling_config>`"
msgstr ":doc:`Вы можете изменить настройки опроса. <polling_config>`"

#: aiosend.polling.invoice.InvoicePollingManager.invoice_polling:1 of
msgid "Register a handler for polling invoice updates."
msgstr "Назначьте функцию-обработчик для обновлений счетов при опросе."

#: aiosend.polling.invoice.InvoicePollingManager.expired_invoice_polling:3
#: aiosend.polling.invoice.InvoicePollingManager.invoice_polling:3 of
msgid "Decorator for handler function."
msgstr "Декоратор для функции-обработчика."

#: ../../events/invoice_polling.rst
msgid "Return type"
msgstr ""

#: aiosend.polling.invoice.InvoicePollingManager.expired_invoice_polling:5
#: aiosend.polling.invoice.InvoicePollingManager.invoice_polling:5 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\, "
"\\:py\\:class\\:\\`\\~collections.abc.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]`"
msgstr ""

#: ../../events/invoice_polling.rst
msgid "Returns"
msgstr ""

#: aiosend.polling.invoice.InvoicePollingManager.expired_invoice_polling:6
#: aiosend.polling.invoice.InvoicePollingManager.invoice_polling:6 of
msgid "handler function."
msgstr "функция-обработчик."

#: aiosend.polling.invoice.InvoicePollingManager.expired_invoice_polling:1 of
msgid "Register a handler for timed out invoices."
msgstr "Назначьте функцию-обработчик для счетов с истекшим временем ожидания."

#: ../../events/invoice_polling.rst:30
msgid "Usage example"
msgstr "Пример использования"

